/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{background-color:#6c6d7f;font-family:Roboto,sans-serif;font-size:1.6rem}h1,h2,h3{font-family:Raleway,sans-serif;line-height:1.5;margin:0 0 5rem;text-align:center;text-transform:uppercase}h1{font-size:5rem}h2{color:#e91e63;font-size:3.6rem}h3{font-size:3.2rem}p{color:#2b2e4a;font-size:1.6rem;line-height:2}.contenedor{margin:0 auto;max-width:120rem;width:95%}a{text-decoration:none}img{height:auto;max-width:100%}.boton,img{display:block}.boton{background-color:#e91e63;border:none;border-radius:3rem;color:#f2f2f2;font-size:3.5rem;font-weight:700;margin:0 auto;padding:1rem 5rem;transition:transform .2s ease-in}.boton:hover{cursor:pointer;transform:scale(1.2)}.barra{display:flex;flex-direction:column}@media (min-width:768px){.barra{flex-direction:row;justify-content:flex-end}}.header{background-repeat:no-repeat;background-size:cover;padding:5rem 0;position:relative}@media (min-width:768px){.header{min-height:60rem}}.header:before{background-color:#000;bottom:0;content:"";left:0;opacity:.7;position:absolute;right:0;top:0}.header .contenido-header{position:relative}.header .contenido-header h1{color:#f2f2f2;margin-bottom:2.5rem;margin-top:5rem}@media (min-width:768px){.header .contenido-header h1{margin-top:10rem}}.header-inicio{background-image:url(../img/bg-header.jpg);background-position:50%}.nav-principal{align-items:center;display:flex;flex-direction:column;margin-top:2rem}@media (min-width:768px){.nav-principal{flex-direction:row;gap:1.5rem;margin-top:0}}.nav-principal a{color:#f2f2f2;font-size:2rem;font-weight:700;margin-bottom:1.5rem;text-transform:uppercase}.nav-principal a:hover{color:#e91e63}.sobreMi{background-color:#f2f2f2;margin-top:2rem;padding:5rem 2rem;text-align:center}@media (min-width:768px){.sobreMi{padding:5rem}}.sobreMi .conoce__grid img{display:inline-block}@media (min-width:768px){.sobreMi .conoce__grid{align-items:center;display:grid;grid-template-columns:1fr 2fr}}.sobreMi .conoce p{font-size:2rem;margin-top:2rem}@media (min-width:768px){.sobreMi .conoce p{margin:0}}.iconos{margin-top:5rem}@media (min-width:768px){.iconos .listado-iconos{display:grid;gap:3rem;grid-template-columns:repeat(3,1fr)}}.iconos .listado-iconos .icono{transition:transform .3s linear}.iconos .listado-iconos .icono img{margin:0 auto;width:10rem}.iconos .listado-iconos .icono p{color:#e91e63;font-family:Bona Nova,sans-serif;font-size:3.2rem;margin:1rem 0}@media (min-width:768px){.iconos .listado-iconos .icono p{margin:0}}.iconos .listado-iconos .icono:hover{cursor:pointer;transform:scale(1.2)}.contenedor-habilidades{background-color:#f2f2f2}.titulo-habilidades{margin-bottom:2.5rem;text-align:center}.habilidades{align-items:center;background-color:#5a609b;border-radius:2rem;display:flex;flex-direction:column;margin:0 auto;padding:5rem;width:70%}@media (min-width:768px){.habilidades{display:grid;gap:2rem;grid-template-columns:repeat(3,1fr);place-items:center}}.habilidades .habilidad img{height:10rem}.habilidades .habilidad p{color:#f2f2f2;font-size:2rem;font-weight:700;margin:1.5rem 0;text-align:center}@media (min-width:768px){.habilidades .habilidad p{margin-bottom:0}}.proyectos{background-color:#f2f2f2;padding:5rem 3rem}.proyecto{margin-bottom:5rem}.proyecto:last-of-type{margin-bottom:0}.proyecto:nth-child(odd) .texto{order:1}.proyecto:nth-child(odd) .imagen{order:2}@media (min-width:768px){.proyecto{align-items:center;display:flex;gap:5rem}}.proyecto .imagen,.proyecto .texto{flex:1}.proyecto .texto{margin-top:1.5rem}.proyecto .texto h3{color:#2b2e4a;margin:0;text-align:left}.proyecto .texto h3:after{background-color:#e91e63;content:"";display:block;height:5px;width:50%}.proyecto .texto p{color:#2b2e4a}.contenedor-footer{background-color:#2b2e4a;padding:2rem 0}.contenedor-footer .footer .nav-principal{padding-top:2rem}.contenedor-footer .footer p{color:#f2f2f2;font-size:2.4rem;margin:0;text-align:center}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
